services:
   api:
      image: php:7.2-apache
      build:
         context: .
         dockerfile: ./api/Dockerfile
      container_name: ${PROJECT_NAME:-app}_api
      env_file:
         - .env
      networks:
         - app_network
      ports:
         - "${API_PORT:-8050}:8000"
         - "${WS_PORT:-8051}:8051"
      volumes:
         - ../apiCodeine:/var/www/html # api app path
         - ./api/entrypoint.sh:/usr/local/bin/entrypoint.sh
      depends_on:
         - database
      restart: unless-stopped

   database:
      image: postgres:14
      container_name: ${PROJECT_NAME:-app}_db
      ports:
         - "${DB_PORT:-5432}:5432"
      networks:
         - app_network
         - pgadmin_network
      volumes:
         - db_data:/var/lib/postgresql/data
      environment:
         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
         - POSTGRES_DB=${POSTGRES_DB}
         - POSTGRES_USER=${POSTGRES_USER}
      restart: unless-stopped

   pgadmin:
      image: dpage/pgadmin4
      container_name: ${PROJECT_NAME:-app}_pgadmin
      networks:
         - pgadmin_network
      ports:
         - "${PGADMIN_PORT:-8060}:80"
      environment:
         - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
         - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
         - PGADMIN_CONFIG_SERVER_MODE=${PGADMIN_CONFIG_SERVER_MODE:-False}
      restart: unless-stopped

   frontend:
      build:
         context: .
         dockerfile: ./frontend/Dockerfile
      container_name: ${PROJECT_NAME:-app}_frontend
      networks:
         - app_network
      ports:
         - "${FRONTEND_PORT:-8080}:8080"
      volumes:
         - ../frontend:/app # frontend app path
      environment:
         - NODE_ENV=${NODE_ENV:-development}
      command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
      restart: unless-stopped

   admin:
      build:
         context: .
         dockerfile: ./admin/Dockerfile
      container_name: ${PROJECT_NAME:-app}_admin
      env_file:
         - .env
      networks:
         - app_network
      ports:
         - "${ADMIN_PORT:-8081}:8081"
      volumes:
         - ../panelAdmin:/app #admin app path
      environment:
         - NODE_ENV=${NODE_ENV:-development}
      command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
      restart: unless-stopped

networks:
   app_network:
      name: ${PROJECT_NAME:-app}_network
   pgadmin_network:
      name: ${PROJECT_NAME:-app}_pgadmin_network

volumes:
   db_data:
      name: ${PROJECT_NAME:-app}_db_data